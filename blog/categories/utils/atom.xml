<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: utils | Emacs Redux]]></title>
  <link href="http://emacsredux.com/blog/categories/utils/atom.xml" rel="self"/>
  <link href="http://emacsredux.com/"/>
  <updated>2016-01-31T12:21:41+02:00</updated>
  <id>http://emacsredux.com/</id>
  <author>
    <name><![CDATA[Bozhidar Batsov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clear Comint Buffers]]></title>
    <link href="http://emacsredux.com/blog/2015/01/18/clear-comint-buffers/"/>
    <updated>2015-01-18T21:57:00+02:00</updated>
    <id>http://emacsredux.com/blog/2015/01/18/clear-comint-buffers</id>
    <content type="html"><![CDATA[<p><code>comint</code> provides Emacs infrastructure for building command
interpreters. It's backing a lot of popular shell/REPL modes - like <code>eshell</code>,
<code>inferior-lisp</code>, <code>inf-ruby</code>, <code>inf-clojure</code>, etc.</p>

<p><code>comint</code> provides a myriad of built-in commands, but somewhat surprisingly
it doesn't feature a command to clear the contents of a <code>comint</code> buffer.
Let's write one such command ourselves!</p>

<p>While there are several way to tackle it, I feel this is the simplest
(and the one that makes the best use of <code>comint</code>'s existing
functionality):</p>

<p>``` cl
(defun comint-clear-buffer ()
  (interactive)
  (let ((comint-buffer-maximum-size 0))</p>

<pre><code>(comint-truncate-buffer)))
</code></pre>

<p>;; let's bind the new command to a keycombo
(define-key comint-mode-map "\C-c\M-o" #'comint-clear-buffer)
```</p>

<p>Simple and elegant, right? One day it might even end up being part of <code>comint</code> itself.</p>
]]></content>
  </entry>
  
</feed>
